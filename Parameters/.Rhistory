install.packages(c("doParallel", "dplyr", "gridExtra", "knitr", "RColorBrewer", "tidyverse"))
yes
install.packages(c("doParallel", "dplyr", "gridExtra", "knitr", "RColorBrewer", "tidyverse"))
# require(rstan)
library(RColorBrewer)
require(knitr)
require(tidyverse)
require(gridExtra)
library(doParallel)
# require(rstan)
library(RColorBrewer)
#library(RgoogleMaps)
options(scipen = 999)
knitr::opts_knit$set(root.dir = "..")
knitr::opts_chunk$set(echo=TRUE)
#knitr::opts_knit$set(root.dir = normalizePath("../"))
source("R/DataLoadUtils.r")
source("R/BasicEpiAnalyses.r")
source("R/DataUtils.r")
source("R/model_functions.R")
source("R/StochasticSEIR.R")
source("R/CalcHospDeaths.R")
source("R/get_ageadjust_severe.R")
source("R/DataLoadUtils.r")
source("R/BasicEpiAnalyses.r")
source("R/DataUtils.r")
source("R/model_functions.R")
source("R/StochasticSEIR.R")
source("R/CalcHospDeaths.R")
source("R/get_ageadjust_severe.R")
epiweb("dcm")
epiweb(class = "dcm")
version_date <- lubridate::ymd("2020-03-10")
knitr::opts_chunk$set(echo = FALSE, cache=TRUE, eval=TRUE,
tidy.opts=list(width.cutoff=60),
tidy=TRUE)
library(tidyverse)
library(magrittr)
library(lubridate)
library(stringr)
library(tibble)
library(broom)
library(ggplot2)
library(ggthemes)
library(gt)
library(knitr)
library("EpiModel")
epiweb(class = "dcm")
library("EpiModel")
epiweb(class = "icm")
install.packages(“statnetWeb”)
install.packages(“statnetWeb”)
install.packages('statenetWeb')
install.packages('statenetweb')
install.packages("statnetWeb")
statnetWeb::run_sw()
run_sw()
version_date <- lubridate::ymd("2020-03-10")
knitr::opts_chunk$set(echo = FALSE, cache=TRUE, eval=TRUE,
tidy.opts=list(width.cutoff=60),
tidy=TRUE)
library(tidyverse)
library(magrittr)
library(lubridate)
library(stringr)
library(tibble)
library(broom)
library(ggplot2)
library(ggthemes)
library(gt)
library(knitr)
library("statnetWeb")
run_sw()
siwrl()
libary('swirl')
library('swirls')
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <-flags[, 19:23]
lapply(flag_shapes,range())
lapply(flag_shapes,range
)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags,unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
iris
head(iris)
tapply(iris$Sepal.Length,iris$Species,mean)
?apply
colMeans(iris)
data(mtcars)
?mtcars
head(mtcars)
tapply(mtcars$mpg,mtcars$cyl,mean)
?with
with(mtcars,tapply(mpg,cyl,mean))
?split
sapply(split(mtcars$mpg,mtcars$cyl),mean)
sapply(mtcars,cyl,mean)
lapply(mtcars,mean)
?mean
mean(mtcars$mpg,mtcars$cyl)
result<-tapply(mtcars$mpg,mtcars$cyl,mean)
result
result$8-result$4
result[8]-result[4]
result['4']
result['8']-result['4']
debug(ls)
ls
ls()
Q
Q
Q
iris
apply(iris,2,mean)
undebug(ls)
Q
Q
undebug(ls)
install.packages("socialmixr")
cws
cwd
getwd
getwd()
setwd("/Users/billyzhaoyh/Desktop/AIforGoodSimulator/compartmental-model/Parameters")
getwd()
inputContactMatrix <- read.csv('ContactMatrices/IraqCM.csv')
source(contact_matrices.R)
source('contact_matrices.R')
source('ContactMatrices/contact_matrices.R')
remove(list = ls())
source('ContactMatrices/contact_matrices.R')
camp_name <- 'Haman-al-Alil'
ageLimits <- c(0,10,20,30,40,50,60,70,80)
inputContactMatrix <- read.csv('ContactMatrices/IraqCM.csv')
generated_contact_matrix <- generate_contact_matrix(camp_name,ageLimits,inputContactMatrix)
write.csv(generated_contact_matrix,  file = paste("Contact_matrix_",camp_name,".csv",sep=''))
